@page "/add-patient"
@using ClinicTracking.Client.DTOs
@using ClinicTracking.Client.Services
@inject IPatientService PatientService
@inject NavigationManager Navigation

<PageTitle>Add New Patient</PageTitle>

<div class="container">
    <div class="row">
        <div class="col-md-8 mx-auto">
            <div class="card">
                <div class="card-header">
                    <h4 class="mb-0">
                        <i class="fas fa-user-plus me-2"></i>
                        Add New Patient
                    </h4>
                </div>
                <div class="card-body">
                    <EditForm Model="patient" OnValidSubmit="CreatePatient" FormName="AddPatientForm">
                        <DataAnnotationsValidator />
                        <ValidationSummary class="alert alert-danger" />

                        <div class="row">
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label for="mrn" class="form-label">MRN <span class="text-danger">*</span></label>
                                    <InputText id="mrn" class="form-control" @bind-Value="patient.MRN" />
                                    <ValidationMessage For="@(() => patient.MRN)" />
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label for="name" class="form-label">Patient Name <span class="text-danger">*</span></label>
                                    <InputText id="name" class="form-control" @bind-Value="patient.Name" />
                                    <ValidationMessage For="@(() => patient.Name)" />
                                </div>
                            </div>
                        </div>

                        <div class="row">
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label for="referralDate" class="form-label">Referral Date <span class="text-danger">*</span></label>
                                    <InputDate id="referralDate" class="form-control" @bind-Value="patient.ReferralDate" />
                                    <ValidationMessage For="@(() => patient.ReferralDate)" />
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label for="counsellingDate" class="form-label">Counselling Date</label>
                                    <InputDateNullable id="counsellingDate" class="form-control" @bind-Value="patient.CounsellingDate" />
                                </div>
                            </div>
                        </div>

                        <div class="mb-3">
                            <label for="counsellingBy" class="form-label">Counselling By</label>
                            <InputText id="counsellingBy" class="form-control" @bind-Value="patient.CounsellingBy" placeholder="Enter staff member who conducted counselling" />
                            <ValidationMessage For="@(() => patient.CounsellingBy)" />
                        </div>

                        <div class="mb-3">
                            <label for="delayReason" class="form-label">Delay Reason</label>
                            <InputTextArea id="delayReason" class="form-control" rows="3" @bind-Value="patient.DelayReason" />
                            <ValidationMessage For="@(() => patient.DelayReason)" />
                        </div>

                        <div class="row">
                            <div class="col-md-6">
                                <div class="mb-3 form-check">
                                    <InputCheckbox id="surveyReturned" class="form-check-input" @bind-Value="patient.SurveyReturned" />
                                    <label for="surveyReturned" class="form-check-label">Survey Returned</label>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="mb-3 form-check">
                                    <InputCheckbox id="isEnglishFirstLanguage" class="form-check-input" @bind-Value="patient.IsEnglishFirstLanguage" />
                                    <label for="isEnglishFirstLanguage" class="form-check-label">English First Language</label>
                                </div>
                            </div>
                        </div>

                        <div class="mb-3">
                            <label for="treatment" class="form-label">Treatment</label>
                            <InputText id="treatment" class="form-control" @bind-Value="patient.Treatment" />
                            <ValidationMessage For="@(() => patient.Treatment)" />
                        </div>

                        <div class="row">
                            <div class="col-md-6">
                                <div class="mb-3 form-check">
                                    <InputCheckbox id="adjuvant" class="form-check-input" @bind-Value="patient.Adjuvant" />
                                    <label for="adjuvant" class="form-check-label">Adjuvant</label>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="mb-3 form-check">
                                    <InputCheckbox id="palliative" class="form-check-input" @bind-Value="patient.Palliative" />
                                    <label for="palliative" class="form-check-label">Palliative</label>
                                </div>
                            </div>
                        </div>

                        <div class="row">
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label for="dispensedDate" class="form-label">Dispensed Date</label>
                                    <InputDateNullable id="dispensedDate" class="form-control" @bind-Value="patient.DispensedDate" />
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label for="imagingDate" class="form-label">Imaging Date</label>
                                    <InputDateNullable id="imagingDate" class="form-control" @bind-Value="patient.ImagingDate" />
                                </div>
                            </div>
                        </div>

                        <div class="row">
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label for="resultsDate" class="form-label">Results Date</label>
                                    <InputDateNullable id="resultsDate" class="form-control" @bind-Value="patient.ResultsDate" />
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label for="nextCycleDue" class="form-label">Next Cycle Due</label>
                                    <InputDateNullable id="nextCycleDue" class="form-control" @bind-Value="patient.NextCycleDue" />
                                </div>
                            </div>
                        </div>

                        <div class="mb-3">
                            <label for="nextAppointment" class="form-label">Next Appointment</label>
                            <InputDateNullable id="nextAppointment" class="form-control" @bind-Value="patient.NextAppointment" />
                        </div>

                        <div class="mb-3">
                            <label for="comments" class="form-label">Comments</label>
                            <InputTextArea id="comments" class="form-control" rows="4" @bind-Value="patient.Comments" />
                        </div>

                        @if (error != null)
                        {
                            <div class="alert alert-danger">
                                <i class="fas fa-exclamation-triangle me-2"></i>
                                @error
                            </div>
                        }

                        <div class="d-flex justify-content-between">
                            <button type="button" class="btn btn-secondary" @onclick="Cancel">
                                <i class="fas fa-times me-2"></i>Cancel
                            </button>
                            <button type="submit" class="btn btn-success" disabled="@submitting">
                                @if (submitting)
                                {
                                    <span class="spinner-border spinner-border-sm me-2" role="status"></span>
                                }
                                else
                                {
                                    <i class="fas fa-save me-2"></i>
                                }
                                Create Patient
                            </button>
                        </div>
                    </EditForm>
                </div>
            </div>
        </div>
    </div>
</div>

@code {
    [SupplyParameterFromForm]
    private CreatePatientTrackingDto patient { get; set; } = new CreatePatientTrackingDto();
    private string? error;
    private bool submitting = false;

    private async Task CreatePatient()
    {
        submitting = true;
        error = null;
        
        try
        {
            var result = await PatientService.CreatePatientAsync(patient);
            if (result != null)
            {
                Navigation.NavigateTo("/");
            }
            else
            {
                error = "Failed to create patient. Please check if the MRN already exists.";
            }
        }
        catch (Exception ex)
        {
            error = $"An error occurred: {ex.Message}";
        }
        finally
        {
            submitting = false;
        }
    }

    private void Cancel()
    {
        Navigation.NavigateTo("/");
    }
}